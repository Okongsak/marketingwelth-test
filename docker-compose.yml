
version: '3.8'
services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:7
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
    container_name: article_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Mount source code สำหรับ hot reload
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      # ป้องกันไม่ให้ node_modules ถูก override
      - backend_node_modules:/app/node_modules
    stdin_open: true
    tty: true
    environment:
      PORT: 3000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blogdb
      TYPEORM_SYNC: 'true' # dev only
      JWT_SECRET: 'change_this_secret'
      JWT_EXPIRES_IN: '3600s'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    container_name: article_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      # Mount source code สำหรับ hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/package.json:/app/package.json
      # ป้องกันไม่ให้ node_modules ถูก override
      - frontend_node_modules:/app/node_modules
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://localhost:3000
    networks:
      - app-network

volumes:
  pgdata:
  backend_node_modules:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge
